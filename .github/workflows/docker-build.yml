name: CI/CD - Weather AI App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/weather-app:latest
          platforms: linux/amd64

  deploy:
    name: Deploy to AWS EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH to EC2 and Deploy Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "ðŸš€ Starting deployment on EC2..."
            sudo docker stop weather-app || true
            sudo docker rm weather-app || true
            sudo docker rmi $(sudo docker images -q) -f || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/weather-app:latest
            sudo docker run -d -p 80:9000 --name weather-app \
              -e ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }} \
              -e PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }} \
              -e PINECONE_ENVIRONMENT=${{ secrets.PINECONE_ENVIRONMENT }} \
              -e OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }} \
              ${{ secrets.DOCKER_USERNAME }}/weather-app:latest
            echo "âœ… Deployment complete!"